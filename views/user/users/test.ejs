
<script>
const verifypayment = async(req,res)=>{
    try { 
          const user_id = req.session.userId
        const paymentData = req.body
        const cartData = await cart.findOne({userid:user_id})
        console.log(cartData);
    
        const hmac = crypto.createHmac("sha256", 'EclX20mfIDWVRBGPneTZWpqV');
        hmac.update( paymentData.payment.razorpay_order_id  +"|" +  paymentData.payment.razorpay_payment_id );
        const hmacValue = hmac.digest("hex");
    
        if(hmacValue == paymentData.payment.razorpay_signature){
            let data = cartData.items
            
            for( let i=0;i<data.length;i++){
                let products = data[i].productid
                let count = data[i].count
                console.log(product);
                
                await product.updateOne({_id:products},{$inc:{quantity:-count}})
          }
    
          await order.findByIdAndUpdate(
            { _id: paymentData.order.receipt },
            { $set: { paymentStatus: "placed", paymentId: paymentData.payment.razorpay_payment_id } }
          );
      
          await cart.deleteOne({userid:user_id})
          res.json({placed:true})
        }
    
      
        
    } catch (error) {
        console.log(error.message);
    }
}





if(payment == "Cash on delivery"){
        let data = cartData.items
            
        for( let i=0;i<data.length;i++){
            let products = data[i].productid
            let count = data[i].count
            console.log(product);
            
            await product.updateOne({_id:products},{$inc:{quantity:-count}})
        }
        console.log("sdfewssdgdf");
        await cart.deleteOne({userid:id})
       return res.json({success:true}
       
        
        )
      }else if(payment == "Wallet"){
        return res.json({online:true})
  
      }else{
        const options ={
            amount: totalsum*100,
            currency: "INR",
            receipt: ""+orderdata._id,
          }
  
          instance.orders.create(options, function (err, order) {
  
           return res.json({ order });
          });
  
         }
</script>