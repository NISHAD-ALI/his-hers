<script>
    const dashboard = async (req, res) => {
    try {
        const orders = await order.find().sort({ purchaseDate: -1 }).populate("items.productid");
        console.log(orders);
        if(orders.length!=0){
            const customer = await user.find().count();
            const ordercount = await order.find().count();
            const cancelledorders = await order.find({ status: 'cancelled' }).count();
          
        const orderdata = await order.aggregate([{ $match: { status: "delivered" } },
        { $group: { _id: null, total: { $sum: '$totalAmount' } } }])
      var data
          if(orderdata!=0){
             data = orderdata[0].total
        }else{
             data=0
            
          }
       var codtotal
        const cod = await order.aggregate([{ $match: { status: 'delivered', paymentMethod: 'Cash on delivery' } }, { $group: { _id: null, total: { $sum: '$totalAmount' } } }])
        if(cod!=0){
         codtotal = cod[0].total
        }else{
             codtotal =0 
        }
    
        
       var value
        const totalcodorder = await order.aggregate([{ $match: { status: 'delivered' } }, { $group: { _id: null, total: { $sum: 1 } } }])
     if(totalcodorder !=0){
        value = totalcodorder[0].total
     }else{
         value=0
     }

        
        var stock
        const totalstock = await product.aggregate([{ $group: { _id: null, total: { $sum: "$quantity" } } }])
        if(totalstock!=0){
        stock = totalstock[0].total
        }else{
            stock=0
        }
      
        var codcount
        const codtotalcount = await order.aggregate([{ $match: { status: 'delivered', paymentMethod: 'Cash on delivery' } }, { $group: { _id: null, total: { $sum: 1 } } }])
        if(codtotalcount!=0){
         codcount = codtotalcount[0].total
       
        }else{
             codcount =0
        }

        var onlinecount
        const onlinetotalcount = await order.aggregate([{ $match: { paymentMethod: 'Online Payment', status: 'delivered' } }, { $group: { _id: null, total: { $sum: 1 } } }])
        if(onlinetotalcount!=0){
         onlinecount = onlinetotalcount[0].total
        }
        else{
             onlinecount =0
        }
        
        var onlinetotal
        const online = await order.aggregate([{ $match: { status: 'delivered', paymentMethod: 'Online Payment' } }, { $group: { _id: null, total: { $sum: '$totalAmount' } } }])
          if(online!=0){
         onlinetotal = online[0].total
          }else{
             onlinetotal =0
          }
        

        res.render('dashboard', {
            orders,
            data,
            value,
            stock,
            codcount,
            onlinecount,
            codtotal,
            onlinetotal,
            customer,
            ordercount,
            cancelledorders
        })
    }
    else{
        res.render('dashboard', {
            orders,
            data:0,
            value:0,
            stock:0,
            codcount:0,
            onlinecount:0,
            codtotal:0,
            onlinetotal:0,
            customer:0,
            ordercount:0,
            cancelledorders:0
        })
    }
        
   
    
         
    }
    catch (error) {
       console.log(error.message);
   }
}
</script>